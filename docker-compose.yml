version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: rag-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER:-raguser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3386:3306"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER:-raguser}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # Database Initialization
  db-init:
    image: mysql:8.0
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./mysql/init:/scripts
    environment:
      - MYSQL_HOST=db
      - MYSQL_USER=${MYSQL_USER:-raguser}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    entrypoint: ["/bin/bash", "/scripts/init-db.sh"]
    restart: on-failure

  # Backend Flask API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rag-backend
    restart: unless-stopped
    depends_on:
      db-init:
        condition: service_completed_successfully
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USER=${MYSQL_USER:-raguser}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - FLASK_ENV=${FLASK_ENV}
      - SECRET_KEY=${SECRET_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
      - OLLAMA_MODEL_NAME=${OLLAMA_MODEL_NAME}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ACCESS_TOKEN_EXPIRES=${JWT_ACCESS_TOKEN_EXPIRES}
      - JWT_REFRESH_TOKEN_EXPIRES=${JWT_REFRESH_TOKEN_EXPIRES}
      - CHROMA_DB_PATH=${CHROMA_DB_PATH}
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - MAX_CONTENT_LENGTH=104857600 #100MB
    volumes:
      - ./backend:/app
      - chroma_data:/app/chroma_db
      - uploads_data:/app/uploads
    ports:
      - "6868:5000"

  # Frontend React + Vite App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:5000/api
      - VITE_DEFAULT_LANGUAGE=vi

  ollama:
    image: ollama/ollama:latest
    container_name: rag-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

volumes:
  mysql_data:
  chroma_data:
  uploads_data:
  ollama_data: 
